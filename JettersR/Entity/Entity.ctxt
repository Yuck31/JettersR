#BlueJ class context
comment0.target=Entity
comment1.params=x\ y\ z
comment1.target=Entity(int,\ int,\ int)
comment10.params=
comment10.target=int\ getY()
comment11.params=
comment11.target=int\ getZ()
comment12.params=
comment12.target=int\ getZOffset()
comment13.params=
comment13.target=int\ getBoundsX()
comment14.params=
comment14.target=int\ getBoundsY()
comment15.params=
comment15.target=int\ getWidth()
comment16.params=
comment16.target=int\ getHeight()
comment17.params=
comment17.target=JettersR.Sprite\ getSprite()
comment18.params=
comment18.target=int\ tileX()
comment19.params=
comment19.target=int\ tileY()
comment2.params=xOffset\ yOffset
comment2.target=java.awt.Rectangle\ getCollisionBounds(double,\ double)
comment20.params=xa\ ya\ za
comment20.target=Entity\ entityCollision(double,\ double,\ int)
comment21.params=xa\ ya\ za
comment21.target=Entity[]\ entityCollisions(double,\ double,\ int)
comment22.params=entities\ className
comment22.target=boolean\ isolatedCollision(Entity[],\ java.lang.String)
comment23.params=entities\ colType
comment23.target=boolean\ collisionType(Entity[],\ Entity.CollisionType)
comment24.params=entities\ className
comment24.target=Entity\ isolatedEntity(Entity[],\ java.lang.String)
comment25.params=entities\ colType
comment25.target=Entity\ isolatedEntity(Entity[],\ Entity.CollisionType)
comment26.params=xa\ ya\ za
comment26.target=Projectile\ projectileCollision(double,\ double,\ int)
comment27.params=xa\ ya\ za
comment27.target=Items.Item\ itemDetect(int,\ int,\ int)
comment28.params=xa\ ya\ za
comment28.target=Mob.Player\ playerDetect(double,\ double,\ int)
comment29.params=xa\ ya\ za
comment29.target=boolean\ hazardCollision(double,\ double,\ int)
comment3.params=
comment3.target=java.lang.String\ getClassName()
comment30.params=e\ d\ side\ xa\ ya\ za
comment30.target=JettersR.Tiles.Tile\ tileCollision(Entity,\ Entity.Direction,\ int,\ double,\ double,\ int)
comment31.params=e\ d\ side\ xa\ ya\ za
comment31.target=JettersR.Tiles.Tile\ floorCollision(Entity,\ Entity.Direction,\ int,\ double,\ double,\ int)
comment32.params=e\ d\ side\ xa\ ya\ za
comment32.target=JettersR.Tiles.Tile\ slopeCollision(Entity,\ Entity.Direction,\ int,\ double,\ double,\ int)
comment33.params=
comment33.target=boolean\ solid()
comment34.params=
comment34.target=boolean\ breakable()
comment35.params=
comment35.target=boolean\ hazard()
comment36.params=xa\ ya
comment36.target=void\ updateVelocity(int,\ int)
comment37.params=
comment37.target=void\ move()
comment38.params=xa\ ya
comment38.target=void\ move(int,\ int)
comment39.params=dirX\ dirY\ forced\ forceMulti
comment39.target=void\ hop(int,\ int,\ boolean,\ int)
comment4.params=
comment4.target=java.lang.String\ className()
comment40.params=
comment40.target=void\ bounce()
comment41.params=dirX\ dirY\ forced\ forceMulti
comment41.target=void\ bounce(int,\ int,\ boolean,\ int)
comment42.params=dirX\ dirY
comment42.target=void\ roll(int,\ int)
comment43.params=
comment43.target=void\ die()
comment44.params=
comment44.target=void\ Destroy()
comment45.params=
comment45.target=void\ collect()
comment46.params=player
comment46.target=void\ collect(Mob.Player)
comment47.params=
comment47.target=void\ pickUp()
comment48.params=player
comment48.target=void\ pickUp(Mob.Player)
comment49.params=dirX\ dirY\ throwMulti
comment49.target=void\ Throw(int,\ int,\ int)
comment5.params=
comment5.target=void\ update()
comment50.params=
comment50.target=boolean\ isRemoved()
comment51.params=level
comment51.target=void\ init(JettersR.Level)
comment52.params=
comment52.target=Entity\ getInstance()
comment6.params=screen
comment6.target=void\ render(JettersR.Screen)
comment7.params=screen\ scale
comment7.target=void\ renderScale(JettersR.Screen,\ float)
comment8.params=
comment8.target=void\ remove()
comment9.params=
comment9.target=int\ getX()
numComments=53
